from flask import Flask, render_template, request, send_file
import numpy as np
import pickle
import io
from reportlab.pdfgen import canvas
from reportlab.lib.pagesizes import letter
from reportlab.platypus import Table, TableStyle
from reportlab.lib import colors
import requests
from PIL import Image

app = Flask(__name__)
model = pickle.load(open('model.pkl', 'rb'))

@app.route('/')
def welcome():
    return render_template('welcome.html')

@app.route('/predict-form')
def predict_form():
    return render_template('index.html')

@app.route('/bmi')
def bmi():
    return render_template('bmi.html')

@app.route('/predict', methods=['POST'])
def predict():
    try:
        age = float(request.form['age'])
        bmi = float(request.form['bmi'])
        children = int(request.form['children'])
        sex_male = int(request.form['sex_male'])
        smoker_yes = int(request.form['smoker_yes'])

        region = request.form['region']
        region_northwest = 1 if region == 'northwest' else 0
        region_southeast = 1 if region == 'southeast' else 0
        region_southwest = 1 if region == 'southwest' else 0

        features = np.array([[age, bmi, children, sex_male, smoker_yes,
                              region_northwest, region_southeast, region_southwest]])

        prediction = model.predict(features)[0]
        prediction_text = f"Estimated Premium: ${prediction:.2f}"

        return render_template('index.html', prediction_text=prediction_text)
    except Exception as e:
        return render_template('index.html', prediction_text=f"Error: {str(e)}")

@app.route('/generate-pdf', methods=['POST'])
def generate_pdf():
    from reportlab.pdfgen import canvas
    from reportlab.lib.pagesizes import letter
    from reportlab.lib.units import inch
    from reportlab.lib import colors
    from reportlab.platypus import Table, TableStyle, SimpleDocTemplate, Paragraph, Spacer, Image
    from reportlab.lib.styles import getSampleStyleSheet
    import io
    import requests

    # Collect form data
    age = request.form.get('age')
    bmi = request.form.get('bmi')
    children = request.form.get('children')
    sex = 'Male' if request.form.get('sex_male') == '1' else 'Female'
    smoker = 'Yes' if request.form.get('smoker_yes') == '1' else 'No'
    region = request.form.get('region').capitalize()
    prediction = request.form.get('prediction_text')

    # Create PDF buffer
    buffer = io.BytesIO()
    doc = SimpleDocTemplate(buffer, pagesize=letter)
    styles = getSampleStyleSheet()
    elements = []

    # âœ… Download and insert your logo
    try:
        logo_url = "https://dcassetcdn.com/design_img/3489669/451277/451277_19128960_3489669_4bec6f7e_image.jpg"
        response = requests.get(logo_url, stream=True)
        if response.status_code == 200:
            with open("logo_temp.jpg", "wb") as f:
                f.write(response.content)
            elements.append(Image("logo_temp.jpg", width=2.5 * inch, height=1.5 * inch))
    except Exception as e:
        print("Logo loading failed:", e)

    elements.append(Spacer(1, 20))
    elements.append(Paragraph("<b>Insurance Premium Prediction Report</b>", styles['Title']))
    elements.append(Spacer(1, 20))

    # Data table
    data = [
        ['Field', 'Value'],
        ['Age', age],
        ['BMI', bmi],
        ['Children', children],
        ['Sex', sex],
        ['Smoker', smoker],
        ['Region', region],
        ['Prediction', prediction]
    ]

    table = Table(data, colWidths=[150, 300])
    table.setStyle(TableStyle([
        ('BACKGROUND', (0, 0), (-1, 0), colors.darkblue),
        ('TEXTCOLOR', (0, 0), (-1, 0), colors.whitesmoke),
        ('ALIGN', (0, 0), (-1, -1), 'LEFT'),
        ('FONTNAME', (0, 0), (-1, 0), 'Helvetica-Bold'),
        ('FONTSIZE', (0, 0), (-1, -1), 11),
        ('BOTTOMPADDING', (0, 0), (-1, 0), 12),
        ('BACKGROUND', (0, 1), (-1, -1), colors.beige),
        ('GRID', (0, 0), (-1, -1), 1, colors.grey),
    ]))

    elements.append(table)
    elements.append(Spacer(1, 20))
    elements.append(Paragraph("Generated by Insurance Premium Predictor Web App", styles['Normal']))

    doc.build(elements)
    buffer.seek(0)
    return send_file(buffer, as_attachment=True, download_name="insurance_report.pdf", mimetype='application/pdf')


if __name__ == '__main__':
    app.run(host='0.0.0.0', port=10000)
